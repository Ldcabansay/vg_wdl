# include the application.conf at the top
include required(classpath("application"))

backend {
  default = "Slurm"
  providers {
    Slurm {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory" 
      config {
        concurrent-job-limit = 50
        runtime-attributes = """
        Int time = 600
        Int cpu = 2
        Int memory = 40
        Int disks = 50
        String? docker
        """

        submit = """
            sbatch \
              --wait \
              -J ${job_name} \
              -D ${cwd} \
              -o ${out} \
              -e ${err} \
              -t ${time} \
              ${"-c " + cpu} \
              --mem=${memory + "g"} \
              --gres=lscratch:${disks} \
              --wrap "'/bin/bash ${script}'"
        """

        submit-docker = """
            # Submit the script to SLURM
            sbatch \
              --wait \
              -J ${job_name} \
              -D ${cwd} \
              -o ${cwd}/execution/stdout \
              -e ${cwd}/execution/stderr \
              -t ${time} \
              ${"-c " + cpu} \
              --mem=${memory + "g"} \
              --gres=lscratch:${disks} \
              --wrap "'module load singularity; mkdir -p /lscratch/\$SLURM_JOB_ID/singularity_cache; export SINGULARITY_CACHEDIR=/lscratch/\$SLURM_JOB_ID/singularity_cache/; time singularity exec --bind ${cwd}:${docker_cwd} docker://${docker} ${job_shell} ${script}'"
        """
        kill = "scancel ${job_id}"
        check-alive = "squeue -j ${job_id}"
        job-id-regex = "(\\d+).*"
      }
    }
  }
}


